using System;
using System.Security.Cryptography;
using System.Runtime.InteropServices;

namespace Sample {
    public class WorkItem {

        /// <summary>
        /// A platform global work item index used for generating indices for each work item.
        /// </summary>
        protected static long _globalWorkItemIndex = 0;

        /// <summary>
        /// A batch of Price Points to be computed by Vulkan Shader program
        /// </summary>
        public PricePoint[] PricePoints {get;}

        /// <summary>
        /// A computed output generated by VulkanCompute for provided PricePoints.
        /// The array is arranged in Row-Major order meaning that to access the
        /// First computed indicator values you simply only need to specify ComputedOutput[0]
        /// </summary>
        public float[][]? ComputedOutput {get;set;} = null;
        /// <summary>
        /// An Unique Generated ID for this item
        /// </summary>
        public long WorkItemIndex {get;}

        /// <summary>
        /// Constructs a WorkItem contains a batch of Price Points to be processed by vulkan Compute program.
        /// </summary>
        public WorkItem(PricePoint[] pricePoints)
        {
            // Atomically generates an ID for this Work Item, this is thread safe.
            WorkItemIndex = Interlocked.Increment(ref _globalWorkItemIndex);
            PricePoints = pricePoints;
        }
    }
}